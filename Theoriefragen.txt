1) Wie hoch ist der Aufwand um Zusicherungen im Eiffel-Code zu formulieren?

Gering, da als Sprachelement in Eiffel integriert.

2) Wie stark wirkt sich die Überprüfung von Zusicherungen auf die Laufzeit aus?

TODO: Messen, Laufzeit hängt von der Komplexität der Zusicherungen ab
https://docs.eiffel.com/book/method/et-design-contract-tm-assertions-and-exceptions#Run-time_assertion_monitoring
Idee: Als Zusicherung Methode aufrufen die ein Schleife sehr oft durchläuft.

3) Vorbedingungen dürfen im Untertyp nicht stärker und Nachbedingungen nicht schwächer werden um Ersetzbarkeit zu garantieren. Der Eiffel-Compiler überprüft diese Bedingungen. Ist es (trotz eingeschalteter Überprüfung von Zusicherungen) möglich, diese Bedingungen zu umgehen? Wenn ja, wie?

Werden konstanten für Zusicherungen verwendet ist es möglich, im Untertyp den Wert dieser Konstante zu ändern wodurch die Zusicherung ausgehebelt werden kann.

4) Eiffel erlaubt kovariante Eingangsparametertypen. Unter welchen Bedingungen führt das zu Problemen, und wie äußern sich diese? Können Sie ein Programm schreiben, in dem die Verwendung kovarianter Eingangsparametertypen zu einer Exception führt?

TODO: CatCalls beschreiben

5) Vereinfachen kovariante Eingangsparametertypen die Programmierung? Unter welchen Bedingungen ist das so?
Welche Spracheigenschaften von Eiffel finden Sie interessant und würden Sie gerne auch in anderen Sprachen sehen? Welche Eigenschaften von Eiffel empfinden Sie dagegen als störend?

